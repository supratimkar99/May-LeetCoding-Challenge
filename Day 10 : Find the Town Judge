/*
In a town, there are N people labelled from 1 to N. There is a rumor that one of these people is secretly the town judge.
If the town judge exists, then:
  1. The town judge trusts nobody.
  2. Everybody (except for the town judge) trusts the town judge.
  3. There is exactly one person that satisfies properties 1 and 2.
You are given trust, an array of pairs trust[i] = [a, b] representing that the person labelled a trusts the person labelled b.
If the town judge exists and can be identified, return the label of the town judge.  Otherwise, return -1.
*/

class Solution {
    public int findJudge(int N, int[][] trust)
    {
        int a[][] = new int[N+1][2];
        for(int i=0; i<trust.length; i++)
        {
            a[trust[i][0]][1]=-1;
            if(a[trust[i][1]][1]!=-1)
                a[trust[i][1]][1]+=1;
        }
        a[0][1]=-1;
        for(int i=0; i<N+1; i++)
            if(a[i][1]==N-1)
                return i;
        return -1;
    }
}
